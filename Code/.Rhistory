p5 <- p5 + ylab("GCC")
p5 <- p5 + ggtitle("(e)")
p5 <- p5 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p5
#RCC
p6 <- ggplot(data = ITC1, aes(x = conseqDOY, y = RCC)) + geom_line()
p6 <- p6 + geom_smooth(method = "glm", se = T, colour = "red")
p6 <- p6 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = RCC), hjust = -.1)
# p6 <- p6 + geom_vline(xintercept = 365, lty = "dashed")
p6 <- p6 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p6 <- p6 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$RCC), digits = 2)-0.01,round(max(ITC1$RCC), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$RCC), digits = 2)-0.01), max(round(max(ITC1$RCC), digits = 2)+0.01), by = 0.01))
p6 <- p6 + ylab("RCC")
p6 <- p6 + ggtitle("(f)")
p6 <- p6 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p6
#BCC
p7 <- ggplot(data = ITC1, aes(x = conseqDOY, y = BCC)) + geom_line()
p7 <- p7 + geom_smooth(method = "glm", se = T, colour = "blue")
p7 <- p7 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = BCC), hjust = -.1)
# p7 <- p7 + geom_vline(xintercept = 365, lty = "dashed")
p7 <- p7 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p7 <- p7 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$BCC), digits = 2)-0.01,round(max(ITC1$BCC), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$BCC), digits = 2)-0.01), max(round(max(ITC1$BCC), digits = 2)+0.01), by = 0.01))
p7 <- p7 + ylab("BCC")
p7 <- p7 + ggtitle("(g)")
p7 <- p7 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p7
#ExG
p8 <- ggplot(data = ITC1, aes(x = conseqDOY, y = ExG)) + geom_line()
p8 <- p8 + geom_smooth(method = "glm", se = T, colour = "darkgreen")
p8 <- p8 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = ExG), hjust = -.1)
# p8 <- p8 + geom_vline(xintercept = 365, lty = "dashed")
p8 <- p8 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = unique(data1$DOY))
p8 <- p8 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$ExG), digits = 2)-0.01,round(max(ITC1$ExG), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$ExG), digits = 2)-0.01), max(round(max(ITC1$ExG), digits = 2)+0.01), by = 0.02))
p8 <- p8 + ylab("ExG") + xlab("Day of Year")
p8 <- p8 + ggtitle("(h)")
p8 <- p8 + theme(legend.position = "none",
axis.title.x = element_text(size = 14, colour = "black"),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_text(hjust = 1, size=12, colour = "black", angle = 65),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p8
library(gridExtra)
library(grid)
pe <- ggplot_gtable(ggplot_build(p5))
pf <- ggplot_gtable(ggplot_build(p6))
pg <- ggplot_gtable(ggplot_build(p7))
ph <- ggplot_gtable(ggplot_build(p8))
maxWidth = unit.pmax(pe$widths[2:3], pf$widths[2:3], pg$widths[2:3], ph$widths[2:3])
pe$widths[2:3] <- maxWidth
pf$widths[2:3] <- maxWidth
pg$widths[2:3] <- maxWidth
ph$widths[2:3] <- maxWidth
# png(file="../Results/LSR/Fig. 7 - ITC Indices Change.png", width=1600,height=1200, res=120)
grid.arrange(pe, pf, pg, ph, nrow=4, ncol=1, left = textGrob("Colour Coordinates", rot = 90, gp=gpar(fontsize=14)))
unique(data1$DOY)
unique(data1$DOY)
#Removing pilot year
data1 <- subset(data, !Year == "2018")
data1$conseqDOY <- data$DOY
data1$conseqDOY <- data1$DOY
View(data1)
##Coverting to day of year
data$DOY <- (as.POSIXlt(data$Date, format = "%Y-%m-%d")$yday)+1
##Adding Year
data$Year <- as.POSIXlt(data$Date, format = "%Y-%m-%d")$year
data$Year <- paste0("20", substring(as.character(data$Year),2,3))
#Removing pilot year
data1 <- subset(data, !Year == "2018")
data1$conseqDOY <- data1$DOY
##Converting factors to numeric
# data1$GCC <- as.numeric(levels(data1$GCC))[data1$GCC]
# data1$RCC <- as.numeric(levels(data1$RCC))[data1$RCC]
# data1$BCC <- as.numeric(levels(data1$BCC))[data1$BCC]
data1$ExG <- as.numeric(levels(data1$ExG))[data1$ExG]
##Fit model
library(visreg)
#GCC
fit1 <- glm(GCC ~ conseqDOY, family=gaussian, data=data1)
vis.out1 <- visreg(fit1, scale = "response", plot = FALSE)
#RCC
fit2 <- glm(RCC ~ conseqDOY, family=gaussian, data=data1)
vis.out2 <- visreg(fit2, scale = "response", plot = FALSE)
#BCC
fit3 <- glm(BCC ~ conseqDOY, family=gaussian, data=data1)
vis.out3 <- visreg(fit3, scale = "response", plot = FALSE)
#ExG
fit4 <- glm(ExG ~ conseqDOY, family=gaussian, data=data1)
vis.out4 <- visreg(fit4, scale = "response", plot = FALSE)
##Plotting all tree crowns
library(ggplot2)
p1 <- ggplot(data = data1) + geom_boxplot(aes(x = conseqDOY, y = GCC, group = as.factor(conseqDOY)))
p1 <- p1 + geom_ribbon(data = vis.out1$fit, aes(x = conseqDOY, ymin = visregLwr, ymax = visregUpr), fill = "lightgrey")
p1 <- p1 + geom_line(data = vis.out1$fit, aes(x = conseqDOY, y = visregFit), colour = "green", size = 0.5)
# p1 <- p1 + geom_vline(xintercept = 365, lty = "dashed")
p1 <- p1 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(data1$conseqDOY)-5),max(unique(data1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p1 <- p1 + scale_y_continuous(expand = c(0,0), limits=c(round(min(data1$GCC), digits = 2)-0.01,round(max(data1$GCC), digits = 2)+0.01), breaks = seq(min(round(min(data1$GCC), digits = 2)-0.01), max(round(max(data1$GCC), digits = 2)+0.01), by = 0.02))
p1 <- p1 + ylab("GCC")
p1 <- p1 + ggtitle("(a)")
p1 <- p1 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 12, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p1
#RCC
p2 <- ggplot(data = data1) + geom_boxplot(aes(x = conseqDOY, y = RCC, group = as.factor(conseqDOY)))
p2 <- p2 + geom_ribbon(data = vis.out2$fit, aes(x = conseqDOY, ymin = visregLwr, ymax = visregUpr), fill = "lightgrey")
p2 <- p2 + geom_line(data = vis.out2$fit, aes(x = conseqDOY, y = visregFit), colour = "red", size = 0.5)
# p2 <- p2 + geom_vline(xintercept = 365, lty = "dashed")
p2 <- p2 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(data1$conseqDOY)-5),max(unique(data1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p2 <- p2 + scale_y_continuous(expand = c(0,0), limits=c(round(min(data1$RCC), digits = 2)-0.01,round(max(data1$RCC), digits = 2)+0.01), breaks = seq(min(round(min(data1$RCC), digits = 2)-0.01), max(round(max(data1$RCC), digits = 2)+0.01), by = 0.02))
p2 <- p2 + ylab("RCC")
p2 <- p2 + ggtitle("(b)")
p2 <- p2 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 12, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p2
#BCC
p3 <- ggplot(data = data1) + geom_boxplot(aes(x = conseqDOY, y = BCC, group = as.factor(conseqDOY)))
p3 <- p3 + geom_ribbon(data = vis.out3$fit, aes(x = conseqDOY, ymin = visregLwr, ymax = visregUpr), fill = "lightgrey")
p3 <- p3 + geom_line(data = vis.out3$fit, aes(x = conseqDOY, y = visregFit), colour = "blue", size = 0.5)
# p3 <- p3 + geom_vline(xintercept = 365, lty = "dashed")
p3 <- p3 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(data1$conseqDOY)-5),max(unique(data1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p3 <- p3 + scale_y_continuous(expand = c(0,0), limits=c(round(min(data1$BCC), digits = 2)-0.01,round(max(data1$BCC), digits = 2)+0.01), breaks = seq(min(round(min(data1$BCC), digits = 2)-0.01), max(round(max(data1$BCC), digits = 2)+0.01), by = 0.02))
p3 <- p3 + ylab("BCC")
p3 <- p3 + ggtitle("(c)")
p3 <- p3 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 12, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p3
#ExG
p4 <- ggplot(data = data1) + geom_boxplot(aes(x = conseqDOY, y = ExG, group = as.factor(conseqDOY)))
p4 <- p4 + geom_ribbon(data = vis.out4$fit, aes(x = conseqDOY, ymin = visregLwr, ymax = visregUpr), fill = "lightgrey")
p4 <- p4 + geom_line(data = vis.out4$fit, aes(x = conseqDOY, y = visregFit), colour = "darkgreen", size = 0.5)
# p4 <- p4 + geom_vline(xintercept = 365, lty = "dashed")
p4 <- p4 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(data1$conseqDOY)-5),max(unique(data1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p4 <- p4 + scale_y_continuous(expand = c(0,0), limits=c(round(min(data1$ExG), digits = 2)-0.01,round(max(data1$ExG), digits = 2)+0.01), breaks = seq(min(round(min(data1$ExG), digits = 2)-0.1), max(round(max(data1$ExG), digits = 2)+0.1), by = 0.1))
p4 <- p4 + ylab("ExG")
p4 <- p4 + ggtitle("(d)")
p4 <- p4 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.05, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p4
require(gridExtra)
library(grid)
pa <- ggplot_gtable(ggplot_build(p1))
pb <- ggplot_gtable(ggplot_build(p2))
pc <- ggplot_gtable(ggplot_build(p3))
pd <- ggplot_gtable(ggplot_build(p4))
maxWidth = unit.pmax(pa$widths[2:3], pb$widths[2:3], pc$widths[2:3], pd$widths[2:3])
pa$widths[2:3] <- maxWidth
pb$widths[2:3] <- maxWidth
pc$widths[2:3] <- maxWidth
pd$widths[2:3] <- maxWidth
# png(file="../Results/LSR/Fig. 6 - Global Indices Change.png", width=1600,height=1200, res=120)
grid.arrange(pa, pb, pc, pd, nrow=4, ncol=1, left = textGrob("Colour Coordinates", rot = 90, gp=gpar(fontsize=14)))
##Plotting ITC
#GCC
ITC1 <- subset(data1, Tree_Crown_ID=="162")
p5 <- ggplot(data = ITC1, aes(x = conseqDOY, y = GCC)) + geom_line()
p5 <- p5 + geom_smooth(method = "glm", se = T, colour = "green")
p5 <- p5 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = GCC), hjust = -.1)
# p5 <- p5 + geom_vline(xintercept = 365, lty = "dashed")
p5 <- p5 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p5 <- p5 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$GCC), digits = 2)-0.01,round(max(ITC1$GCC), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$GCC), digits = 2)-0.01), max(round(max(ITC1$GCC), digits = 2)+0.01), by = 0.01))
p5 <- p5 + ylab("GCC")
p5 <- p5 + ggtitle("(e)")
p5 <- p5 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p5
#RCC
p6 <- ggplot(data = ITC1, aes(x = conseqDOY, y = RCC)) + geom_line()
p6 <- p6 + geom_smooth(method = "glm", se = T, colour = "red")
p6 <- p6 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = RCC), hjust = -.1)
# p6 <- p6 + geom_vline(xintercept = 365, lty = "dashed")
p6 <- p6 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p6 <- p6 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$RCC), digits = 2)-0.01,round(max(ITC1$RCC), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$RCC), digits = 2)-0.01), max(round(max(ITC1$RCC), digits = 2)+0.01), by = 0.01))
p6 <- p6 + ylab("RCC")
p6 <- p6 + ggtitle("(f)")
p6 <- p6 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p6
#BCC
p7 <- ggplot(data = ITC1, aes(x = conseqDOY, y = BCC)) + geom_line()
p7 <- p7 + geom_smooth(method = "glm", se = T, colour = "blue")
p7 <- p7 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = BCC), hjust = -.1)
# p7 <- p7 + geom_vline(xintercept = 365, lty = "dashed")
p7 <- p7 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p7 <- p7 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$BCC), digits = 2)-0.01,round(max(ITC1$BCC), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$BCC), digits = 2)-0.01), max(round(max(ITC1$BCC), digits = 2)+0.01), by = 0.01))
p7 <- p7 + ylab("BCC")
p7 <- p7 + ggtitle("(g)")
p7 <- p7 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p7
#ExG
p8 <- ggplot(data = ITC1, aes(x = conseqDOY, y = ExG)) + geom_line()
p8 <- p8 + geom_smooth(method = "glm", se = T, colour = "darkgreen")
p8 <- p8 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = ExG), hjust = -.1)
# p8 <- p8 + geom_vline(xintercept = 365, lty = "dashed")
p8 <- p8 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = unique(data1$DOY))
p8 <- p8 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$ExG), digits = 2)-0.01,round(max(ITC1$ExG), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$ExG), digits = 2)-0.01), max(round(max(ITC1$ExG), digits = 2)+0.01), by = 0.02))
p8 <- p8 + ylab("ExG") + xlab("Day of Year")
p8 <- p8 + ggtitle("(h)")
p8 <- p8 + theme(legend.position = "none",
axis.title.x = element_text(size = 14, colour = "black"),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_text(hjust = 1, size=12, colour = "black", angle = 65),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p8
library(gridExtra)
library(grid)
pe <- ggplot_gtable(ggplot_build(p5))
pf <- ggplot_gtable(ggplot_build(p6))
pg <- ggplot_gtable(ggplot_build(p7))
ph <- ggplot_gtable(ggplot_build(p8))
maxWidth = unit.pmax(pe$widths[2:3], pf$widths[2:3], pg$widths[2:3], ph$widths[2:3])
pe$widths[2:3] <- maxWidth
pf$widths[2:3] <- maxWidth
pg$widths[2:3] <- maxWidth
ph$widths[2:3] <- maxWidth
# png(file="../Results/LSR/Fig. 7 - ITC Indices Change.png", width=1600,height=1200, res=120)
grid.arrange(pe, pf, pg, ph, nrow=4, ncol=1, left = textGrob("Colour Coordinates", rot = 90, gp=gpar(fontsize=14)))
# png(file="../Results/LSR/Fig. 6 - CC Change.png", width=1400,height=1800, res=120)
grid.arrange(pa, pb, pc, pd, pe, pf, pg, ph, nrow=8, ncol=1, left = textGrob("Colour Coordinates", rot = 90, gp=gpar(fontsize=14)))
png(file="../Results/LSR/Fig. 7 - ITC Indices Change.png", width=1600,height=1200, res=120)
grid.arrange(pe, pf, pg, ph, nrow=4, ncol=1, left = textGrob("Colour Coordinates", rot = 90, gp=gpar(fontsize=14)))
dev.off()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='conmine',
token='AB2E5BE9DF9CBD4344C6840161A36017',
secret='a9QYV7vxP+yRSbiMhT9aEqTWBgSVecRwqtolISbU')
library(rsconnect)
rsconnect::deployApp("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp/ConMine.R")
rsconnect::deployApp("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp")
rsconnect::deployApp("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp/Test/")
rsconnect::deployApp("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp/Test/")
# See above for the definitions of ui and server
source("../InstallPackages.R")
source("../helpers.R")
source("../ImputationPlots.R")
# See above for the definitions of ui and server
source("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp/InstallPackages.R")
source("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp/helpers.R")
source("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp/ImputationPlots.R")
setwd("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp")
setwd("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code")
# See above for the definitions of ui and server
source("ShinyApp/InstallPackages.R")
source("ShinyApp/helpers.R")
source("ShinyApp/ImputationPlots.R")
source("ShinyApp/MapTrade.R")
source("ShinyApp/MapTrade_network.R")
source("ShinyApp/DownloadImage.R")
source("ShinyApp/ConMine_ui.R")
source("ShinyApp/ConMine_server.R")
# shinyApp(ui = ui, server = server)
rsconnect::deployApp("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp")
setwd("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp")
rsconnect::deployApp("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp/Test")
# See above for the definitions of ui and server
source("Test/InstallPackages.R")
source("Test/helpers.R")
source("Test/ImputationPlots.R")
source("Test/MapTrade.R")
source("Test/MapTrade_network.R")
source("Test/DownloadImage.R")
# See above for the definitions of ui and server
source("./Test/InstallPackages.R")
source("./Test/helpers.R")
source("./Test/ImputationPlots.R")
setwd("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code")
# See above for the definitions of ui and server
source("ShinyApp/InstallPackages.R")
source("ShinyApp/helpers.R")
source("ShinyApp/ImputationPlots.R")
source("ShinyApp/MapTrade.R")
source("ShinyApp/MapTrade_network.R")
source("ShinyApp/DownloadImage.R")
rsconnect::deployApp("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp")
# See above for the definitions of ui and server
source("./ShinyApp/InstallPackages.R")
source("./ShinyApp/helpers.R")
source("./ShinyApp/ImputationPlots.R")
source("./ShinyApp/MapTrade.R")
source("./ShinyApp/MapTrade_network.R")
source("./ShinyApp/DownloadImage.R")
rsconnect::deployApp("~/Documents/UniversityWork/PhD/TigerTeams/ConMine/Code/ShinyApp")
View(data)
View(data1)
p5 <- ggplot(data = ITC1, aes(x = conseqDOY, y = GCC)) + geom_line() + geom_point()
p5 <- p5 + geom_smooth(method = "glm", se = T, colour = "green")
p5 <- p5 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = GCC), hjust = -.1)
# p5 <- p5 + geom_vline(xintercept = 365, lty = "dashed")
p5 <- p5 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p5 <- p5 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$GCC), digits = 2)-0.01,round(max(ITC1$GCC), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$GCC), digits = 2)-0.01), max(round(max(ITC1$GCC), digits = 2)+0.01), by = 0.01))
p5 <- p5 + ylab("GCC")
p5 <- p5 + ggtitle("(e)")
p5 <- p5 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p5
ITC1 <- subset(data1, Tree_Crown_ID=="162")
p5 <- ggplot(data = ITC1, aes(x = conseqDOY, y = GCC)) + geom_line() + geom_point()
p5 <- p5 + geom_smooth(method = "glm", se = T, colour = "green")
# p5 <- p5 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = GCC), hjust = -.1)
# p5 <- p5 + geom_vline(xintercept = 365, lty = "dashed")
p5 <- p5 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p5 <- p5 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$GCC), digits = 2)-0.01,round(max(ITC1$GCC), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$GCC), digits = 2)-0.01), max(round(max(ITC1$GCC), digits = 2)+0.01), by = 0.01))
p5 <- p5 + ylab("GCC")
p5 <- p5 + ggtitle("(e)")
p5 <- p5 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p5
#RCC
p6 <- ggplot(data = ITC1, aes(x = conseqDOY, y = RCC)) + geom_line() + geom_point()
p6 <- p6 + geom_smooth(method = "glm", se = T, colour = "red")
# p6 <- p6 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = RCC), hjust = -.1)
# p6 <- p6 + geom_vline(xintercept = 365, lty = "dashed")
p6 <- p6 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p6 <- p6 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$RCC), digits = 2)-0.01,round(max(ITC1$RCC), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$RCC), digits = 2)-0.01), max(round(max(ITC1$RCC), digits = 2)+0.01), by = 0.01))
p6 <- p6 + ylab("RCC")
p6 <- p6 + ggtitle("(f)")
p6 <- p6 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p6
#BCC
p7 <- ggplot(data = ITC1, aes(x = conseqDOY, y = BCC)) + geom_line() + geom_point()
p7 <- p7 + geom_smooth(method = "glm", se = T, colour = "blue")
# p7 <- p7 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = BCC), hjust = -.1)
# p7 <- p7 + geom_vline(xintercept = 365, lty = "dashed")
p7 <- p7 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = NULL)
p7 <- p7 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$BCC), digits = 2)-0.01,round(max(ITC1$BCC), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$BCC), digits = 2)-0.01), max(round(max(ITC1$BCC), digits = 2)+0.01), by = 0.01))
p7 <- p7 + ylab("BCC")
p7 <- p7 + ggtitle("(g)")
p7 <- p7 + theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p7
#ExG
p8 <- ggplot(data = ITC1, aes(x = conseqDOY, y = ExG)) + geom_line() + geom_point()
p8 <- p8 + geom_smooth(method = "glm", se = T, colour = "darkgreen")
# p8 <- p8 + geom_text(aes(label = Tree_Crown_ID, colour = Tree_Crown_ID, x = conseqDOY, y = ExG), hjust = -.1)
# p8 <- p8 + geom_vline(xintercept = 365, lty = "dashed")
p8 <- p8 + scale_x_continuous(expand = c(0,0), limits=c(min(unique(ITC1$conseqDOY)-5),max(unique(ITC1$conseqDOY))+5), breaks = unique(data1$conseqDOY), labels = unique(data1$DOY))
p8 <- p8 + scale_y_continuous(expand = c(0,0), limits=c(round(min(ITC1$ExG), digits = 2)-0.01,round(max(ITC1$ExG), digits = 2)+0.01), breaks = seq(min(round(min(ITC1$ExG), digits = 2)-0.01), max(round(max(ITC1$ExG), digits = 2)+0.01), by = 0.02))
p8 <- p8 + ylab("ExG") + xlab("Day of Year")
p8 <- p8 + ggtitle("(h)")
p8 <- p8 + theme(legend.position = "none",
axis.title.x = element_text(size = 14, colour = "black"),
axis.title.y = element_text(vjust=1.5, size = 14, colour = "black"),
axis.text.x = element_text(hjust = 1, size=12, colour = "black", angle = 65),
axis.text.y = element_text(size=12, colour = "black"),
panel.border = element_rect(fill = NA, linetype = 1),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust=-0.06, vjust=-4),
plot.margin=unit(c(2,0,1,3),"mm")
)
p8
library(gridExtra)
library(grid)
pe <- ggplot_gtable(ggplot_build(p5))
pf <- ggplot_gtable(ggplot_build(p6))
pg <- ggplot_gtable(ggplot_build(p7))
ph <- ggplot_gtable(ggplot_build(p8))
maxWidth = unit.pmax(pe$widths[2:3], pf$widths[2:3], pg$widths[2:3], ph$widths[2:3])
pe$widths[2:3] <- maxWidth
pf$widths[2:3] <- maxWidth
pg$widths[2:3] <- maxWidth
ph$widths[2:3] <- maxWidth
png(file="../Results/LSR/Fig. 7 - ITC Indices Change.png", width=1600,height=1200, res=120)
grid.arrange(pe, pf, pg, ph, nrow=4, ncol=1, left = textGrob("Colour Coordinates", rot = 90, gp=gpar(fontsize=14)))
dev.off()
png(file="../Results/LSR/Fig. 7 - ITC Indices Change.png", width=1600,height=1200, res=120)
grid.arrange(pe, pf, pg, ph, nrow=4, ncol=1, left = textGrob("Colour Coordinates", rot = 90, gp=gpar(fontsize=14)))
dev.off()
png(file="../Results/LSR/Fig. 7 - ITC Indices Change.png", width=1600,height=1200, res=120)
grid.arrange(pe, pf, pg, ph, nrow=4, ncol=1, left = textGrob("Colour Coordinates", rot = 90, gp=gpar(fontsize=14)))
dev.off()
